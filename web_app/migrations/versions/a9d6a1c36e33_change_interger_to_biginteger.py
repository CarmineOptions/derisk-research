"""change interger to biginteger

Revision ID: a9d6a1c36e33
Revises: 841f539c35e9
Create Date: 2024-05-29 19:52:20.457617

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a9d6a1c36e33"
down_revision: Union[str, None] = "841f539c35e9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "ALTER TABLE orderbook ALTER COLUMN timestamp TYPE BIGINT USING EXTRACT(EPOCH FROM timestamp)::BIGINT"
    )
    op.alter_column(
        "orderbook",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.BigInteger(),
        existing_nullable=False,
    )
    op.alter_column(
        "orderbook",
        "block",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "orderbook",
        "block",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.alter_column(
        "orderbook",
        "timestamp",
        existing_type=sa.BigInteger(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
